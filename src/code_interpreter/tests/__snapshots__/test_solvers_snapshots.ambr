# serializer version: 1
# name: test_dsl_trace_sanity[def solve(I):\n    O = hmirror(I)\n    return O]
  PythonResult(stdout='TRANSFORM_RESULT:[[[7, 1, 1, 2, 2, 0, 1, 8, 6, 8], [5, 9, 3, 4, 2, 3, 2, 0, 9, 4], [8, 3, 9, 8, 9, 4, 7, 1, 9, 6], [5, 8, 7, 1, 4, 8, 4, 1, 8, 5], [1, 3, 9, 3, 3, 2, 8, 7, 1, 1], [8, 0, 1, 6, 0, 9, 7, 5, 3, 5], [6, 5, 9, 3, 8, 7, 7, 8, 4, 0], [9, 2, 4, 1, 1, 5, 7, 8, 1, 5], [9, 3, 8, 2, 4, 2, 1, 9, 4, 8], [6, 6, 0, 4, 8, 7, 6, 4, 7, 5]]]\n', stderr='', return_code=0, timed_out=False, latency_ms=291.84484481811523, transform_results=[[[7, 1, 1, 2, 2, 0, 1, 8, 6, 8], [5, 9, 3, 4, 2, 3, 2, 0, 9, 4], [8, 3, 9, 8, 9, 4, 7, 1, 9, 6], [5, 8, 7, 1, 4, 8, 4, 1, 8, 5], [1, 3, 9, 3, 3, 2, 8, 7, 1, 1], [8, 0, 1, 6, 0, 9, 7, 5, 3, 5], [6, 5, 9, 3, 8, 7, 7, 8, 4, 0], [9, 2, 4, 1, 1, 5, 7, 8, 1, 5], [9, 3, 8, 2, 4, 2, 1, 9, 4, 8], [6, 6, 0, 4, 8, 7, 6, 4, 7, 5]]], debug_outputs=[], metrics={'static': {'num_lines': 3, 'avg_line_length': 14.333333333333334, 'num_if_statements': 0, 'num_for_loops': 0, 'num_while_loops': 0, 'dsl_functions_used': {'hmirror'}, 'imports_used': set(), 'ast_node_counts': {'Module': 1, 'FunctionDef': 1, 'arguments': 1, 'Assign': 1, 'Return': 1, 'arg': 1, 'Name': 4, 'Call': 1, 'Store': 1, 'Load': 3}, 'compilation_success': True, 'execution_success': True}, 'runtime': {'latency_ms': 291.84484481811523, 'return_code': 0, 'timed_out': False}})
# ---
# name: test_dsl_trace_sanity[def solve(I):\n    O = vmirror(I)\n    return O]
  PythonResult(stdout='TRANSFORM_RESULT:[[[5, 7, 4, 6, 7, 8, 4, 0, 6, 6], [8, 4, 9, 1, 2, 4, 2, 8, 3, 9], [5, 1, 8, 7, 5, 1, 1, 4, 2, 9], [0, 4, 8, 7, 7, 8, 3, 9, 5, 6], [5, 3, 5, 7, 9, 0, 6, 1, 0, 8], [1, 1, 7, 8, 2, 3, 3, 9, 3, 1], [5, 8, 1, 4, 8, 4, 1, 7, 8, 5], [6, 9, 1, 7, 4, 9, 8, 9, 3, 8], [4, 9, 0, 2, 3, 2, 4, 3, 9, 5], [8, 6, 8, 1, 0, 2, 2, 1, 1, 7]]]\n', stderr='', return_code=0, timed_out=False, latency_ms=272.5341320037842, transform_results=[[[5, 7, 4, 6, 7, 8, 4, 0, 6, 6], [8, 4, 9, 1, 2, 4, 2, 8, 3, 9], [5, 1, 8, 7, 5, 1, 1, 4, 2, 9], [0, 4, 8, 7, 7, 8, 3, 9, 5, 6], [5, 3, 5, 7, 9, 0, 6, 1, 0, 8], [1, 1, 7, 8, 2, 3, 3, 9, 3, 1], [5, 8, 1, 4, 8, 4, 1, 7, 8, 5], [6, 9, 1, 7, 4, 9, 8, 9, 3, 8], [4, 9, 0, 2, 3, 2, 4, 3, 9, 5], [8, 6, 8, 1, 0, 2, 2, 1, 1, 7]]], debug_outputs=[], metrics={'static': {'num_lines': 3, 'avg_line_length': 14.333333333333334, 'num_if_statements': 0, 'num_for_loops': 0, 'num_while_loops': 0, 'dsl_functions_used': {'vmirror'}, 'imports_used': set(), 'ast_node_counts': {'Module': 1, 'FunctionDef': 1, 'arguments': 1, 'Assign': 1, 'Return': 1, 'arg': 1, 'Name': 4, 'Call': 1, 'Store': 1, 'Load': 3}, 'compilation_success': True, 'execution_success': True}, 'runtime': {'latency_ms': 272.5341320037842, 'return_code': 0, 'timed_out': False}})
# ---
